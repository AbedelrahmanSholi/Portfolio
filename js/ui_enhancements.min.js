document.addEventListener('DOMContentLoaded', function() {
const backToTopButton = document.createElement('a');
backToTopButton.href = '#sideBySide';
backToTopButton.className = 'back-to-top';
backToTopButton.innerHTML = '<i class="fas fa-arrow-up"></i>';
backToTopButton.setAttribute('aria-label', 'Back to top');
document.body.appendChild(backToTopButton);
window.addEventListener('scroll', function() {
if (window.pageYOffset > 300) {
backToTopButton.classList.add('visible');
} else {
backToTopButton.classList.remove('visible');
}
});
const sections = document.querySelectorAll('.scroll-section');
const navItems = document.querySelectorAll('#side_nav li');
window.addEventListener('scroll', function() {
let current = '';
sections.forEach(section => {
const sectionTop = section.offsetTop;
const sectionHeight = section.clientHeight;
if (window.pageYOffset >= (sectionTop - 300)) {
current = section.getAttribute('id');
}
});
navItems.forEach(li => {
li.classList.remove('active');
const anchor = li.querySelector('a');
const href = anchor.getAttribute('href').substring(1); 
if (href === current) {
li.classList.add('active');
}
});
});
const animateElements = document.querySelectorAll('.animate-on-scroll');
function checkIfInView() {
animateElements.forEach(element => {
const elementTop = element.getBoundingClientRect().top;
const elementVisible = 150;
if (elementTop < window.innerHeight - elementVisible) {
element.classList.add('visible');
const skillBars = element.querySelectorAll('.skill-progress');
skillBars.forEach((bar, index) => {
setTimeout(() => {
bar.style.width = bar.style.width;
}, index * 100);
});
}
});
}
window.addEventListener('scroll', checkIfInView);
checkIfInView(); 
const track = document.querySelector('.carousel-track');
const cards = document.querySelectorAll('.carousel-card');
const prevButton = document.querySelector('.carousel-button.prev');
const nextButton = document.querySelector('.carousel-button.next');
let currentIndex = 0;
function updateCarousel() {
if (!track) return; 
const cardWidth = cards[0].offsetWidth;
track.style.transform = `translateX(-${currentIndex * cardWidth}px)`;
prevButton.disabled = currentIndex === 0;
nextButton.disabled = currentIndex >= cards.length - 1;
prevButton.style.opacity = prevButton.disabled ? '0.5' : '1';
nextButton.style.opacity = nextButton.disabled ? '0.5' : '1';
}
if (prevButton && nextButton) {
prevButton.addEventListener('click', () => {
if (currentIndex > 0) {
currentIndex--;
updateCarousel();
}
});
nextButton.addEventListener('click', () => {
if (currentIndex < cards.length - 1) {
currentIndex++;
updateCarousel();
}
});
updateCarousel();
window.addEventListener('resize', updateCarousel);
}
const skillBadges = document.querySelectorAll('.skill-badge');
skillBadges.forEach(badge => {
const skillName = badge.querySelector('.skill-badge-name').textContent;
badge.setAttribute('data-tooltip', skillName);
});
});
