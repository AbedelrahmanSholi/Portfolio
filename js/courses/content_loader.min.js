document.addEventListener('DOMContentLoaded', function() {
loadJavaCourseContent();
loadWebDriverIOCourseContent();
loadRoadmapContent();
setupSyntaxHighlighting();
});
function loadJavaCourseContent() {
const javaContentMap = {
'java-intro-content': 'courses/java/intro.html',
'java-lambda-content': 'courses/java/lambda.html',
'java-streams-content': 'courses/java/streams.html',
'java-optional-content': 'courses/java/optional.html',
'java-completable-content': 'courses/java/completable.html',
'java-reflection-content': 'courses/java/reflection.html',
'java-exercises-content': 'courses/java/exercises.html'
};
for (const [contentId, filePath] of Object.entries(javaContentMap)) {
loadContent(contentId, filePath);
}
}
function loadWebDriverIOCourseContent() {
const wdioContentMap = {
'wdio-fundamentals-content': 'courses/webdriverio/fundamentals.html',
'wdio-selectors-content': 'courses/webdriverio/selectors.html',
'wdio-async-content': 'courses/webdriverio/async.html',
'wdio-api-content': 'courses/webdriverio/api.html',
'wdio-custom-content': 'courses/webdriverio/custom.html',
'wdio-pom-content': 'courses/webdriverio/pom.html',
'wdio-cucumber-content': 'courses/webdriverio/cucumber.html',
'wdio-testng-content': 'courses/webdriverio/testng.html',
'wdio-patterns-content': 'courses/webdriverio/patterns.html',
'wdio-debug-content': 'courses/webdriverio/debug.html',
'wdio-project-content': 'courses/webdriverio/project.html'
};
for (const [contentId, filePath] of Object.entries(wdioContentMap)) {
loadContent(contentId, filePath);
}
}
function loadRoadmapContent() {
const roadmapContentMap = {
'roadmap-enhanced-content': 'courses/roadmap/enhanced.html',
'roadmap-mastering-content': 'courses/roadmap/mastering.html',
'roadmap-career-content': 'courses/roadmap/career.html',
'roadmap-resources-content': 'courses/roadmap/resources.html'
};
for (const [contentId, filePath] of Object.entries(roadmapContentMap)) {
loadContent(contentId, filePath);
}
}
function loadContent(contentId, filePath) {
const contentElement = document.getElementById(contentId);
if (contentElement) {
fetch(filePath)
.then(response => {
if (!response.ok) {
throw new Error(`HTTP error! Status: ${response.status}`);
}
return response.text();
})
.then(html => {
html = html.replace(/src="\.\.\/resources\/diagrams\
html = html.replace(/<iframe/g, '<iframe sandbox="allow-scripts allow-same-origin"');
contentElement.innerHTML = html;
if (typeof window.processMermaidDiagrams === 'function') {
window.processMermaidDiagrams();
}
if (typeof hljs !== 'undefined') {
contentElement.querySelectorAll('pre code').forEach((block) => {
hljs.highlightBlock(block);
});
}
})
.catch(error => {
console.error(`Error loading content for ${contentId}:`, error);
contentElement.innerHTML = `<p>Error loading content. Please try again later.</p>`;
});
}
}
function setupSyntaxHighlighting() {
if (typeof hljs === 'undefined') {
const highlightCSS = document.createElement('link');
highlightCSS.rel = 'stylesheet';
highlightCSS.href = 'https:
document.head.appendChild(highlightCSS);
const highlightScript = document.createElement('script');
highlightScript.src = 'https:
highlightScript.onload = function() {
document.querySelectorAll('pre code').forEach((block) => {
hljs.highlightBlock(block);
});
};
document.body.appendChild(highlightScript);
}
}
